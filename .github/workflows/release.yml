name: Build & Release Debian Package

on:
  push:
    tags:
      - "v*.*.*" # v0.0.1 같은 태그 push 시 실행

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build SEA binary (Linux amd64)
        run: |
          npm run build
          ls -lh build

      - name: Package .deb
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          mkdir -p debpkg/usr/bin
          cp build/lums debpkg/usr/bin/lums

          # /etc/lums 디렉토리만 (config.json은 프로그램이 생성)
          mkdir -p debpkg/etc/lums

          mkdir -p debpkg/DEBIAN
          cat <<EOF > debpkg/DEBIAN/control
          Package: lums
          Version: ${VERSION}
          Section: utils
          Priority: optional
          Architecture: amd64
          Maintainer: Your Name <you@example.com>
          Description: lums - Node.js SEA packaged CLI
           A single-executable Node.js program built with SEA.
          EOF

          dpkg-deb --build debpkg lums_${VERSION}_amd64.deb

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb-package
          path: lums_*_amd64.deb

  publish:
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: deb-package

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf

      - name: Setup repo
        run: |
          mkdir repo
          mv lums_*_amd64.deb repo/
          cd repo

          # Packages.gz 생성
          dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz

          # Release 파일 생성
          cat <<EOF > Release
          Origin: lums
          Label: lums
          Suite: stable
          Version: 1.0
          Codename: focal
          Architectures: amd64
          Components: main
          Description: lums apt repository
          EOF

          echo "${{ secrets.GPG_PUBLIC_KEY }}" > gpg --dearmor > lums.gpg

          # Release 서명
          gpg --batch --yes --passphrase "${{ secrets.GPG_PASSPHRASE }}" -abs -o Release.gpg Release
          gpg --batch --yes --passphrase "${{ secrets.GPG_PASSPHRASE }}" --clearsign -o InRelease Release

          echo '<!DOCTYPE html>
          <html>
          <head><meta charset="UTF-8"><title>My Package</title></head>
          <body>
            <h1>Download</h1>
            <p><a href="my-package.deb">Download .deb</a></p>
          </body>
          </html>' > index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./repo
